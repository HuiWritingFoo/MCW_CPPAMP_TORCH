CMAKE_MINIMUM_REQUIRED(VERSION 2.6 FATAL_ERROR)
CMAKE_POLICY(VERSION 2.6)

SET(CMAKE_MODULE_PATH "${CMAKE_CURRENT_SOURCE_DIR}/cmake" "${CMAKE_MODULE_PATH}")

FIND_PACKAGE(Torch REQUIRED)

LIST(APPEND GPU_NVCC_FLAGS "-arch=sm_20")

INCLUDE_DIRECTORIES("${Torch_INSTALL_INCLUDE}/THC")
LINK_DIRECTORIES("${Torch_INSTALL_LIB}")

SET(src-camp init.cpp)


# MCW CLAMP Specific. Version >= 0.3 is Must
 # MCW CLAMP Specific. Version >= 0.3 is Must
SET (OPENCL_INC "$ENV{AMDAPPSDKROOT}/include")
SET (OPENCL_LIB "$ENV{AMDAPPSDKROOT}/lib/x86_64")
SET (CLBLAS_INC "$ENV{CLBLASROOT}/include")
SET (CLBLAS_LIB "$ENV{CLBLASROOT}/lib64/")
SET (BOLT_SRC_INC "$ENV{BOLTROOT}/include/")
SET (BOOST_SRC_INC "$ENV{MCWCPPAMPROOT}/build3/Bolt/superbuild/external/boost/src/Boost/")
SET (BOLT_VER_INC "$ENV{MCWCPPAMPROOT}/build3/Bolt/superbuild/Bolt-build/include/")
SET (PREFIX "$ENV{MCWCPPAMPROOT}/gmac_exp_build_cache")
SET (CLANG_AMP "${PREFIX}/compiler/bin/clang++")
SET (CLAMP_CONFIG "${PREFIX}/build/Release/bin/clamp-config")
execute_process(COMMAND ${CLAMP_CONFIG} --build --cxxflags
    OUTPUT_VARIABLE CLAMP_CXXFLAGS)
string(STRIP ${CLAMP_CXXFLAGS} CLAMP_CXXFLAGS)
set (CLAMP_CXXFLAGS "${CLAMP_CXXFLAGS} -I${OPENCL_INC}")
execute_process(COMMAND ${CLAMP_CONFIG} --build --ldflags --shared
    OUTPUT_VARIABLE CLAMP_LDFLAGS)
string(STRIP ${CLAMP_LDFLAGS} CLAMP_LDFLAGS)
set (CLAMP_CXXFLAGS "${CLAMP_CXXFLAGS} -I${OPENCL_INC} -I${CLBLAS_INC} -I${BOLT_SRC_INC} -I${BOLT_VER_INC} -I${BOOST_SRC_INC}")
set (CLAMP_LDFLAGS "${CLAMP_LDFLAGS} -L${OPENCL_LIB} -L${CLBLAS_LIB}")





SET_PROPERTY(SOURCE init.cpp APPEND_STRING PROPERTY COMPILE_FLAGS " ${CLAMP_CXXFLAGS}")
SET(luasrc init.lua test/test.lua)

ADD_LIBRARY(gpunn MODULE ${src-camp})
TARGET_LINK_LIBRARIES(gpunn luaT THC TH)

SET_PROPERTY(TARGET gpunn APPEND_STRING PROPERTY LINK_FLAGS " ${CLAMP_LDFLAGS} ${CLAMP_SHAREDFLAGS}")
### Torch packages supposes libraries prefix is "lib"
SET_TARGET_PROPERTIES(gpunn PROPERTIES
  PREFIX "lib"
  IMPORT_PREFIX "lib")
    
INSTALL(TARGETS gpunn
  RUNTIME DESTINATION "${Torch_INSTALL_LUA_CPATH_SUBDIR}"
  LIBRARY DESTINATION "${Torch_INSTALL_LUA_CPATH_SUBDIR}")

INSTALL(
  FILES
  ${luasrc}
  DESTINATION "${Torch_INSTALL_LUA_PATH_SUBDIR}/gpunn")

ADD_EXECUTABLE(gpunn.test test/test.cpp)
#SET_PROPERTY(TARGET nn APPEND_STRING PROPERTY LINK_FLAGS "-L/usr/local/lib/lua/5.1/")
TARGET_LINK_LIBRARIES(gpunn.test luaT THC TH luajit)
SET_PROPERTY(TARGET gpunn.test APPEND_STRING PROPERTY LINK_FLAGS " -I/usr/local/include -I./test")
